// !============================================= //

// ! Universal						   					  // 

// !============================================= //


// Universal layout mixin that can be used
// even within media queries
@mixin layout($size: med) {
	position: relative;
	@if $size == "overlay" {
		margin-left: 10px;
		margin-right: 10px;
	}
	@else {
		margin-left: 20px;
		margin-right: 20px;			
	}

	@media (min-width: 400px) {
		margin-left: 5%;
		margin-right: 5%;
	}

	@if $size == "slim" or $size == "small" or $size == "sm"  or $size == "s" {
		max-width: 780px;

		@media (min-width: 860px) {
			margin-left: auto !important;
			margin-right: auto !important;
		}	
	} //slim
	@if $size == "medium" or $size == "med" or $size == "md" or $size == "m" {
		max-width: 950px;

		@media (min-width: 800px) {
			margin-left: 50px;
			margin-right: 50px;
		}

		@media (min-width: 1050px) {
			margin-left: auto;
			margin-right: auto;
		}			
	} //medium

	@if $size == "overlay" {
		max-width: 1000px;
		@media (min-width: 800px) {
			margin-left: 50px;
			margin-right: 50px;
		}

		@media (min-width: 1100px) {
			margin-left: auto;
			margin-right: auto;
		}	

		@media (min-width: 400px) {
			margin-top: 20px;
		}		
	} //medium

	@if $size == "wide" or $size == "large" or $size == "lg"  or $size == "l" {
		max-width: 1100px;

		@media (min-width: 800px) {
			margin-left: 50px;
			margin-right: 50px;
		}

		@media (min-width: 1200px) {
			margin-left: auto;
			margin-right: auto;
		}		
	} //wide
}

@mixin l-txt {
	max-width: 600px;
	@media (min-width: 600px) {
		margin-left: auto;
		margin-right: auto;
	}
}

@mixin l-thumb($thumb-width: 50px, $thumb-margin: 20px) {
	@include pie-clearfix;

	.art-bd {
		display: block;
		width: $thumb-width;
		margin: 0 auto 16px;
			> .art {
				@include resp-img;
			}
	}

	@media (min-width: 500px) {
		display: table;

		.art-bd, 
		.txt-bd {
			display: table-cell;
			vertical-align: middle;
		}
		.art-bd {
			margin: 0;			
		}
		.txt-bd {
			padding-left: $thumb-margin;
		}

		// If lower than IE8, which has no
		// support for tables
		.lt-ie8 {
			.art-bd,
			.txt-bd {
				display: block;
			}
			.art-bd {
				float: left;
			}
			.txt-bd {
				margin-left: $thumb-width + $thumb-margin;
			}
		} // .lt-ie8

	} //mq
} //thumb

@mixin l-pair($art-width: 45%, $art-margin: 3.5%) {
	@include pie-clearfix;

	.art-bd {
		display: block;
		width: $art-width;
		margin: 0 auto 16px;
			.art {
				@include resp-img;
			}
	}

	@media (min-width: 750px) {
		display: table;

		.art-bd {
			display: table-cell;
			margin: 0;
		}
		.txt-bd {
			display: table-cell;
			vertical-align: middle;
			padding-left: $art-margin;
		}

		// If lower than IE8, which has no
		// support for tables
		.lt-ie8 {
			.art-bd,
			.txt-bd {
				display: block;
			}
			.art-bd {
				float: left;
			}
			.txt-bd {
				margin-left: $art-width + $art-margin;
			}
		} // .lt-ie8

	} //mq
} //thumb	


@mixin pair($art-width: 50px, $art-margin: 20px, $v-align: middle) {
	@include pie-clearfix;

	@if $v-align == middle {
		display: table;

		.art-bd {
			display: table-cell;
			width: $art-width;
			margin: 0;
			> .art {
				@include resp-img;
			}
		}
		.txt-bd {
			display: table-cell;
			vertical-align: middle;
			padding-left: $art-margin;
		}

		// If lower than IE8, which has no
		// support for tables
		.lt-ie8 {
			.art-bd,
			.txt-bd {
				display: block;
			}
			.art-bd {
				width: $art-width;
				float: left;
			}
			.txt-bd {
				margin-left: $art-width + $art-margin;
			}
		} // .lt-ie8
	} //middle

	@else {
		.art-bd,
		.txt-bd {
			display: block;
		}
		.art-bd {
			width: $art-width;
			float: left;
			margin: 0;
			> .art {
				@include resp-img;
			}
		}
		.txt-bd {
			margin-left: $art-width + $art-margin;
		}		
	}

} //thumb	



// Kill the margin on the last column
.ui-block:last-child,
.ui-block.last {
	margin-right: 0;
	}


// !============================================= */

// ! Media Grid							   									  */ 

// !============================================= */

@mixin media-grid($num: 2, $pad: em(20), $class:media-block) {
	margin-left: -#{$pad};
	@include pie-clearfix;

	.#{$class} {
		float: left;
		padding-left: #{$pad};
		@if $num == 2 or $num == "two" {
			width: 50%;
			&:nth-child(2n+3) {
				clear: left;
			}
			&.n2 {
				clear:left;
			}
		}
		@if $num == 3 or $num == "three" {
			width: 33.3333%;
			&:nth-child(3n+4) {
				clear: left;
			}
			.ie7 & {
				width: 33%;
			}
			&.n3 {
				clear: left;
			}
		}
		@if $num == 4 or $num == "four" {
			width: 25%;
			&:nth-child(4n+5) {
				clear: left;
			}
			&.n4 {
				clear: left;
			}
		}
		@if $num == 5 or $num == "five" {
			&:nth-child(5n+6) {
				clear: left;
			}
			width: 20%;
			&.n5 {
				clear: left;
			}
		}
	}
} //media-grid


// !============================================= */

// ! Grids									   			  */ 

// !============================================= */



@mixin ui-grid($ui-block-num) {
	
	}

// Grid-2 vars

$width-1: 50%; 
$width-2: 50%; 
$margin-r: 5%; 

@mixin ui-grid-2($width-1: 50%, $width-2: 50%, $margin-r:5%) {
	@include pie-clearfix;

	> .ui-block-1,
	> .ui-block.first {
		width: $width-1 - ($margin-r/2);
		@include float-left;
		margin-right: $margin-r;
		}

	> .ui-block-2,	
	> .ui-block.second {
		width: $width-2 - ($margin-r/2);
		@include float-left;
		margin-right: 0;
		}
	}

@mixin ui-grid-rl($width-1: 50%, $width-2:50%, $margin-r:5%) {
	@include pie-clearfix;

	> .ui-block-1,	
	> .ui-block.first {
		width: $width-1 - ($margin-r/2);
		@include float-right;
		}
	
	> .ui-block-2,
	> .ui-block.second {
		width: $width-2 - ($margin-r/2);
		@include float-left;
		margin-right: 0;
		}
	}

@mixin ui-grid-lr($width-1:50%, $width-2:50%, $margin-r:5%) {
	@include pie-clearfix;

	> .ui-block-1,	
	> .ui-block.first {
		width: $width-1 - ($margin-r/2);
		@include float-left;
		}

	> .ui-block-2,	
	> .ui-block.second {
		width: $width-2 - ($margin-r/2);
		@include float-right;
		margin-right: 0;
		}
	}

// Grid-3 vars 

@mixin ui-grid-3($width3-1: 33.333%, $width3-2: 33.333%, $width3-3: 33.333%, $margin3-r: 3.5%)  {
	@include pie-clearfix;

	> .ui-block-1,
	> .ui-block.first {
		width: $width3-1 - ($margin3-r/3);
		@include float-left;
		margin-right: $margin3-r/2;
		}

	> .ui-block-2,	
	> .ui-block.second {
		width: $width3-2 - ($margin3-r/3);
		@include float-left;
		margin-right: $margin3-r/2;
		}

	> .ui-block-3,
	> .ui-block.last {
		width: $width3-3 - ($margin3-r/3);
		@include float-left;
		margin-right: 0;		
		}
	}

// Grid-3-rrl vars
	
@mixin ui-grid-rrl($width3-1: 33.333%, $width3-2: 33.333%, $width3-3: 33.333%, $margin3-r: 3.5%)  {
	@include pie-clearfix;

	> .ui-block-1,
	> .ui-block.first {
		width: $width3-1 - ($margin3-r/3);
		@include float-right;
		margin-right: 0;
		}

	> .ui-block-2,
	> .ui-block.second {
		width: $width3-2 - ($margin3-r/3);
		@include float-right;
		margin-right: $margin3-r/2;
		}

	> .ui-block-3,
	> .ui-block.last {
		width: $width3-3 - ($margin3-r/3);
		@include float-left;
		margin-right: $margin3-r/2;		
		}
	}


// Grid-4 vars 

@mixin ui-grid-4($width4-1: 25%, $width4-2: 25%, $width4-3: 25%, $width4-4: 25%, $margin5-r: 8%) {

	@include pie-clearfix;

	> .ui-block-1,
	> .ui-block.first {
		width: $width4-1 - ($margin4-r/4);
		@include float-left;
		margin-right: $margin4-r/3;
		}

	> .ui-block-2,	
	> .ui-block.second {
		width: $width4-2 - ($margin4-r/4);
		@include float-left;
		margin-right: $margin4-r/3;
		}

	> .ui-block-3,
	> .ui-block.third {
		width: $width4-3 - ($margin4-r/4);
		@include float-left;
		margin-right: $margin4-r/3;
		}

	> .ui-block-4,
	> .ui-block.last {
		width: $width4-4 - ($margin4-r/4);
		@include float-left;
		margin-right: 0;	
		}
	}


// Grid-5 vars

@mixin ui-grid-5($width5-1: 20%, $width5-2: 20%, $width5-3: 20%, $width5-4: 20%, $width5-5: 20%, $margin5-r: 8%) {

	@include pie-clearfix;

	> .ui-block-1,
	> .ui-block.first {
		width: $width5-1 - ($margin5-r/5);
		@include float-left;
		margin-right: $margin5-r/4;
		}

	> .ui-block-2,	
	> .ui-block.second {
		width: $width5-2 - ($margin5-r/5);
		@include float-left;
		margin-right: $margin5-r/4;
		}

	> .ui-block-3,
	> .ui-block.third {
		width: $width5-3 - ($margin5-r/5);
		@include float-left;
		margin-right: $margin5-r/4;
		}

	> .ui-block-4,
	> .ui-block.fourth {
		width: $width5-4 - ($margin5-r/5);
		@include float-left;
		margin-right: $margin5-r/4;
		}

	> .ui-block-5,
	> .ui-block.last {
		width: $width5-5 - ($margin5-r/5);
		@include float-left;
		margin-right: 0;	
		}
	}